import Cards from '@/components/card';
import { runner } from '@/components/error';
import ProtectedRoute from '@/components/protected';
import { Button, Grid, Group, SimpleGrid, Stack, Text, TextInput } from '@mantine/core';
import axios from 'axios';
import Head from 'next/head'
import { useEffect, useState } from 'react';
import { Navigation } from '../components/Navigation';
import { useDidUpdate, useIntersection, useMediaQuery, useSetState } from '@mantine/hooks';
import { useAuth } from '@/components/authcontextprovider';

export default function Home() {
    const { user } = useAuth();

    const { ref, entry } = useIntersection({
        threshold: 1,
    });

    const [SearchData, setSearchData] = useSetState({
        query: 'apple',
        input: '',
        pageSize: 20,
    });

    const [Data, setData] = useState<any>(null);

    const tablet = useMediaQuery('(max-width: 768px)');
    const phone = useMediaQuery('(max-width: 425px)');

    useDidUpdate(() => {
        if(entry?.isIntersecting) {
            if( SearchData.pageSize <= 100 ) {
                setSearchData({ pageSize: SearchData.pageSize + 20 });
            }
        }
    },  [entry]);

    useEffect(() => {
        axios.get(`https://newsapi.org/v2/everything?q=${SearchData.query}&pageSize=${SearchData.pageSize}&from=2023-01-26&to=2023-01-26&sortBy=popularity&apiKey=${process.env.NEXT_PUBLIC_API_KEY}`)
        .then((response: any) => {
            console.log(response);
            setData(response);
        }).catch((error) => {
            runner(error);
        })
    }, [SearchData.query, SearchData.pageSize]);

    const CardList = Data?.data.articles.map((items:any, index:number) => {
        return (
            <div key={index}>
                <Cards img={items.urlToImage} author={ items.author } title={ items.author } desc={ items.description } time={ items.publishedAt } link={ items.url }/>
            </div>
        );
    })

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <ProtectedRoute>
                <Navigation>
                    <Stack>
                        <Text>{ tablet && user.email }</Text>
                        <TextInput
                            placeholder="Search"
                            value={SearchData.input}
                            onChange={(e) => setSearchData({ input: e.target.value})}
                        />
                        <Button onClick={() => setSearchData({ query: SearchData.input})}>Search</Button>
                        <SimpleGrid cols={ tablet ? ( phone ? 1 : 2 ) : 3 } spacing={`sm`}>
                            { CardList }
                        </SimpleGrid>
                        <Text ref={ref}>{SearchData.pageSize <= 100 ? 'Loading...' : 'No more data to show'}</Text>
                    </Stack>
                </Navigation>
            </ProtectedRoute>
        </>
    )
}
